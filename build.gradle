group 'cn.mycommons'
version '0.3'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'


sourceCompatibility = 1.8

mainClassName = "cn.mycommons.mymockserver.MmsMain"

repositories {
    mavenCentral()
}

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.12'
    compile 'com.google.code.gson:gson:2.8.1'
    // compile 'org.mock-server:mockserver:3.10.8'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-api:1.7.24'
    compile 'org.slf4j:slf4j-log4j12:1.6.0'

    // https://mvnrepository.com/artifact/io.netty/netty-all
    compile group: 'io.netty', name: 'netty-all', version: '4.1.15.Final'
    compile 'org.littleshoot:littleproxy:1.1.2'
    compile 'com.github.ganskef:littleproxy-mitm:1.1.0'
    compile 'net.lightbody.bmp:mitm:2.1.4'

    compile 'commons-cli:commons-cli:1.2'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'

    testCompile 'org.testng:testng:6.8.21'
}

test {
    useTestNG()
    beforeTest { descriptor ->
        logger.lifecycle "${descriptor}"
    }
    onOutput { descriptor, event ->
        logger.lifecycle "output:${event.message}"
    }
}

distributions {
    main {
        baseName = 'mms'
        contents {
            from('./') {
                include 'littleproxy-mitm*'
            }
        }
    }
}

distZip.doLast {
    new ByteArrayOutputStream().withStream { os ->
        project.exec {
            commandLine "shasum -a 256 $distZip.archivePath".split(" ")
            standardOutput = os
        }
        ext.sha = os.toString()
    }
    print ext.sha
}

task mmsDeploy(group: 'deploy', dependsOn: assemble) {
    doLast {
        project.exec {
            commandLine "cp ${distZip.archivePath} deploy".split(" ")
        }
    }
}